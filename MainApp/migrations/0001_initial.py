# Generated by Django 4.0 on 2023-07-05 14:24

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_number', models.CharField(blank=True, max_length=225, null=True)),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('gstin', models.CharField(blank=True, help_text='Salon GSTIN number', max_length=20, null=True)),
                ('discount_flat', models.PositiveIntegerField(default=0)),
                ('discount_percentage', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], default='Single', max_length=120)),
                ('dob', models.DateTimeField(blank=True, null=True)),
                ('doa', models.DateTimeField(blank=True, null=True)),
                ('loyalty_point', models.PositiveIntegerField(default=0)),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('mobile', models.CharField(blank=True, max_length=10, null=True)),
                ('referred_by', models.CharField(blank=True, max_length=10, null=True)),
                ('last_visited', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeadStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.PositiveIntegerField(default=0)),
                ('purchase_price', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncorporationImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, help_text='Only png,jpeg,jpg images are allowed', null=True, upload_to='images/incorporation/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg', 'webp'])])),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InHouseProductUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_price', models.PositiveIntegerField(default=0)),
                ('quality', models.PositiveIntegerField(default=0)),
                ('used_date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OtherImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, help_text='Only png,jpeg,jpg images are allowed', null=True, upload_to='images/other/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg', 'webp'])])),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=225, null=True)),
                ('gstin', models.CharField(blank=True, max_length=20, null=True)),
                ('hsn', models.CharField(blank=True, max_length=20, null=True)),
                ('mrp', models.PositiveIntegerField(default=0)),
                ('discount_mrp', models.PositiveIntegerField(default=0)),
                ('purchase_mrp', models.PositiveIntegerField(default=0)),
                ('margin_on_purchase_price', models.PositiveIntegerField(default=0)),
                ('selling_price', models.PositiveIntegerField(default=0)),
                ('item_size', models.PositiveIntegerField(default=0)),
                ('image', models.FileField(blank=True, help_text='Only png,jpeg,jpg images are allowed, max 2MB size', null=True, upload_to='images/product_name/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg'])])),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.category')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.CharField(blank=True, max_length=225, null=True)),
                ('document_type', models.CharField(blank=True, max_length=225, null=True)),
                ('bill_number', models.CharField(blank=True, max_length=225, null=True)),
                ('mrp', models.PositiveIntegerField(default=0)),
                ('purchase_price', models.PositiveIntegerField(default=0)),
                ('discount_flat', models.PositiveIntegerField(default=0)),
                ('discount_percentage', models.PositiveIntegerField(default=0)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('image', models.FileField(blank=True, help_text='Only png,jpeg,jpg images are allowed, max 2MB size', null=True, upload_to='images/purchase/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg'])])),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.products')),
            ],
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.PositiveIntegerField(default=0)),
                ('discount_flat', models.PositiveIntegerField(default=0)),
                ('discount_percentage', models.PositiveIntegerField(default=0)),
                ('selling_price', models.PositiveIntegerField(default=0)),
                ('used_date', models.DateTimeField(auto_now_add=True)),
                ('sales_id', models.CharField(blank=True, max_length=225, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.customer')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.products')),
            ],
        ),
        migrations.CreateModel(
            name='SalonName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Salon name', max_length=225, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url_slug', models.CharField(blank=True, help_text='Salon url_slug', max_length=225, null=True)),
                ('address_line_1', models.CharField(help_text='Salon Address two', max_length=120)),
                ('address_line_2', models.CharField(blank=True, help_text='Salon Address two', max_length=120, null=True)),
                ('locality', models.CharField(blank=True, help_text='Salon Locality', max_length=30, null=True)),
                ('district', models.CharField(blank=True, help_text='Salon District', max_length=50, null=True)),
                ('area_name', models.CharField(blank=True, help_text='Salon Area Name', max_length=60, null=True)),
                ('city_name', models.CharField(blank=True, help_text='Salon City Name', max_length=35, null=True)),
                ('country', models.CharField(default='INDIA', max_length=30)),
                ('state', models.CharField(help_text='Salon State Name', max_length=30)),
                ('latitude', models.CharField(blank=True, help_text='Salon latitude', max_length=15, null=True)),
                ('longitude', models.CharField(blank=True, help_text='Salon longitude', max_length=15, null=True)),
                ('gstin', models.CharField(blank=True, help_text='Salon GSTIN number', max_length=20, null=True)),
                ('pan_card_number', models.CharField(blank=True, help_text='Salon PAN CARD number', max_length=20, null=True)),
                ('incorporation_number', models.CharField(blank=True, help_text='Salon PAN CARD number', max_length=20, null=True)),
                ('other_number', models.CharField(blank=True, help_text='Salon PAN CARD number', max_length=20, null=True)),
                ('bill_name', models.CharField(blank=True, help_text='Salon GSTIN number', max_length=20, null=True)),
                ('bank_account_no', models.CharField(blank=True, help_text='Salon bank account no', max_length=18, null=True)),
                ('bank_account_type', models.CharField(blank=True, help_text='Salon bank type', max_length=18, null=True)),
                ('bank_branch_name', models.CharField(blank=True, help_text='Salon bank type', max_length=18, null=True)),
                ('bank_ifsc_code', models.CharField(blank=True, help_text='Salon bank IFSC', max_length=15, null=True)),
                ('vpa_upi', models.CharField(blank=True, help_text='Salon VPA or UPI', max_length=50, null=True)),
                ('salon_logo_500x500', models.ImageField(blank=True, help_text='Kindly upload 500x500 px image or square shaped images in png, jpeg, jpg format', null=True, upload_to='images/logo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg'])])),
                ('salon_logo_250x250', models.ImageField(blank=True, null=True, upload_to='images/logo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg'])])),
                ('salon_logo_128x128', models.ImageField(blank=True, null=True, upload_to='images/logo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg'])])),
                ('pan_card', models.ImageField(blank=True, help_text='Only png,jpeg,jpg images are allowed', null=True, upload_to='images/pan_card/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg'])])),
                ('gstin_image', models.ImageField(blank=True, help_text='Only png,jpeg,jpg images are allowed', null=True, upload_to='images/gstin/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg'])])),
                ('chain', models.PositiveIntegerField(default=1)),
                ('postal_code', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(100000), django.core.validators.MaxValueValidator(999999)])),
                ('active', models.BooleanField(default=False)),
                ('dev_only', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('incorporation_images', models.ManyToManyField(blank=True, to='MainApp.IncorporationImages')),
                ('other_images', models.ManyToManyField(blank=True, to='MainApp.OtherImages')),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True)),
                ('amount', models.PositiveIntegerField(default=0)),
                ('gstin', models.CharField(blank=True, max_length=20, null=True)),
                ('hsn', models.CharField(blank=True, max_length=20, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.products')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('mobile', models.CharField(blank=True, max_length=10, null=True)),
                ('alternate_mobile', models.CharField(blank=True, max_length=10, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('referral_code', models.CharField(blank=True, max_length=250, null=True)),
                ('staff', models.BooleanField(default=False)),
                ('owner', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('mobile_verified', models.BooleanField(default=False)),
                ('referral_used', models.BooleanField(default=False)),
                ('dob', models.DateTimeField(blank=True, null=True)),
                ('bank_account_no', models.CharField(blank=True, help_text='User bank account no', max_length=18, null=True)),
                ('bank_account_type', models.CharField(blank=True, help_text='User bank type', max_length=18, null=True)),
                ('bank_branch_name', models.CharField(blank=True, help_text='User bank type', max_length=18, null=True)),
                ('bank_ifsc_code', models.CharField(blank=True, help_text='User bank IFSC', max_length=15, null=True)),
                ('vpa_upi', models.CharField(blank=True, help_text='User VPA or UPI', max_length=50, null=True)),
                ('id_proof_type', models.CharField(blank=True, choices=[('PAN CARD', 'PAN CARD'), ('AADHAR', 'AADHAR'), ('VOTER ID', 'VOTER ID'), ('DRIVING LICENCE', 'DRIVING LICENCE'), ('OTHERS', 'OTHERS')], help_text='Please select id proof type carefully, we will verify your identity', max_length=20, null=True)),
                ('id_proof', models.FileField(blank=True, help_text='Only png,jpeg,jpg images are allowed, max 2MB size', null=True, upload_to='images/ids/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'jpg'])])),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('referral_user', models.ManyToManyField(blank=True, to='MainApp.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True)),
                ('short_name', models.CharField(blank=True, max_length=225, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
            ],
        ),
        migrations.CreateModel(
            name='TargetHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achieved_amount', models.PositiveIntegerField(default=0)),
                ('not_achieved_amount', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.products')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.salonname')),
                ('services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.services')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_target', models.PositiveIntegerField(default=0)),
                ('monthly_target', models.PositiveIntegerField(default=0)),
                ('yearly_target', models.PositiveIntegerField(default=0)),
                ('appointment_status', models.CharField(choices=[('Booked', 'Booked'), ('Cancelled', 'Cancelled'), ('Completed', 'Completed')], default='Sales', max_length=120)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.salonname')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.user')),
            ],
        ),
        migrations.CreateModel(
            name='StockHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('dead_stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.deadstock')),
                ('in_house_product_use', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.inhouseproductuse')),
                ('purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.purchase')),
                ('sales', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.sales')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
                ('stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.stock')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
                ('services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.services')),
            ],
        ),
        migrations.CreateModel(
            name='SalonStaffRights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('dev_only', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.user')),
            ],
        ),
        migrations.CreateModel(
            name='SalonOwnerRights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('dev_only', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.user')),
            ],
        ),
        migrations.AddField(
            model_name='salonname',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.user'),
        ),
        migrations.AddField(
            model_name='sales',
            name='salon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname'),
        ),
        migrations.AddField(
            model_name='sales',
            name='sold_to_staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Sold_to_Staff', to='MainApp.user'),
        ),
        migrations.AddField(
            model_name='sales',
            name='staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Staff', to='MainApp.user'),
        ),
        migrations.CreateModel(
            name='SalaryAndCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.PositiveIntegerField(default=1)),
                ('commission', models.PositiveIntegerField(default=1)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.user')),
            ],
        ),
        migrations.AddField(
            model_name='purchase',
            name='salon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname'),
        ),
        migrations.AddField(
            model_name='products',
            name='salon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname'),
        ),
        migrations.AddField(
            model_name='products',
            name='unit_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.unittype'),
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True)),
                ('offer_code', models.CharField(blank=True, max_length=225, null=True)),
                ('uses_per_customer', models.PositiveIntegerField(default=1)),
                ('min_order_amount', models.IntegerField(blank=True, help_text='Minimum this much of billing amount is required inrder to avail discount', null=True)),
                ('discount_type', models.CharField(blank=True, choices=[('percent', 'Percent'), ('flat', 'Flat Discount'), ('Cashback', 'Cashback')], help_text='Percent means x% of amount will be discounted. Flat discount means x amount will be reduced from the billing amount', max_length=30, null=True)),
                ('flat_discount_amount', models.IntegerField(blank=True, help_text='Amount for how much will the discount be given?', null=True)),
                ('percent_discount', models.IntegerField(blank=True, help_text='What percent of discount on amount shall be given?', null=True)),
                ('percent_discount_max_limit', models.IntegerField(blank=True, help_text='Till what amount the discount will be given?', null=True)),
                ('cashback_amount', models.IntegerField(blank=True, help_text='Give cashback in their wallet', null=True)),
                ('visible_on_app', models.BooleanField(default=True, help_text='If this is checked only, the offer will be visible on the website/app')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.salonname')),
                ('services', models.ManyToManyField(blank=True, to='MainApp.Services')),
            ],
        ),
        migrations.CreateModel(
            name='MembershipServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.PositiveIntegerField(blank=True, null=True)),
                ('free_visits', models.PositiveIntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
                ('service_id', models.ManyToManyField(blank=True, to='MainApp.Services')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True)),
                ('type', models.CharField(blank=True, max_length=225, null=True)),
                ('discount', models.PositiveIntegerField(blank=True, null=True)),
                ('discount_type', models.CharField(choices=[('Flat', 'Flat'), ('Percentage', 'Percentage')], default='Flat', max_length=120)),
                ('starting_time', models.DateTimeField(auto_now=True)),
                ('endinging_time', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('membership_service_id', models.ManyToManyField(blank=True, to='MainApp.MembershipServices')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyPointMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(blank=True, choices=[('Debit', 'Debit'), ('Credit', 'Credit')], default='Debit', max_length=120, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.user')),
            ],
        ),
        migrations.AddField(
            model_name='inhouseproductuse',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.products'),
        ),
        migrations.AddField(
            model_name='inhouseproductuse',
            name='salon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname'),
        ),
        migrations.AddField(
            model_name='inhouseproductuse',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.user'),
        ),
        migrations.CreateModel(
            name='GiftCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=225, null=True)),
                ('gift_card_code', models.CharField(blank=True, max_length=225, null=True)),
                ('amount', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.customer')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.salonname')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=225, null=True)),
                ('amount', models.PositiveIntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('dob', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.salonname')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.user')),
            ],
        ),
        migrations.AddField(
            model_name='deadstock',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.products'),
        ),
        migrations.AddField(
            model_name='deadstock',
            name='salon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname'),
        ),
        migrations.CreateModel(
            name='CustomerHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.bill')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.customer')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.salonname')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='membership_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.membership'),
        ),
        migrations.AddField(
            model_name='customer',
            name='salon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname'),
        ),
        migrations.CreateModel(
            name='Chair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chair_number', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.salonname')),
                ('services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.services')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.user')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='salon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname'),
        ),
        migrations.AddField(
            model_name='brand',
            name='salon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname'),
        ),
        migrations.AddField(
            model_name='bill',
            name='chair_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.chair'),
        ),
        migrations.AddField(
            model_name='bill',
            name='gift_cart',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.giftcard'),
        ),
        migrations.AddField(
            model_name='bill',
            name='loyalty_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.loyaltypointmaster'),
        ),
        migrations.AddField(
            model_name='bill',
            name='membership_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.membership'),
        ),
        migrations.AddField(
            model_name='bill',
            name='offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.offers'),
        ),
        migrations.AddField(
            model_name='bill',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.products'),
        ),
        migrations.AddField(
            model_name='bill',
            name='salon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.salonname'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('day', models.CharField(blank=True, max_length=225, null=True)),
                ('starting_time', models.DateTimeField(auto_now=True)),
                ('endinging_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Present', 'Present'), ('Absent', 'Absent'), ('Leave', 'Leave')], default='Present', max_length=120)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.salonname')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_time', models.DateTimeField(blank=True, null=True)),
                ('appointment_status', models.CharField(choices=[('Booked', 'Booked'), ('Cancelled', 'Cancelled'), ('Completed', 'Completed')], default='Booked', max_length=120)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.customer')),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.salonname')),
                ('services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='MainApp.services')),
            ],
        ),
    ]
